#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#include <sys/sysinfo.h>

#define LOAD_DURATION 120 // Duración de la carga en segundos

// Función que simula carga de CPU
void* cpu_load(void* arg) {
    long thread_id = (long)arg;
    printf("Hilo %ld comenzando...\n", thread_id);

    // Simulación de carga
    time_t start_time = time(NULL);
    while (time(NULL) - start_time < LOAD_DURATION) {
        // Realiza operaciones en bucle (simulando carga)
        // Se puede poner cualquier operación compleja aquí
    }

    printf("Hilo %ld finalizando...\n", thread_id);
    return NULL;
}

int main() {
    // Obtener el número de núcleos de CPU
    int num_cores = get_nprocs();
    printf("Número de núcleos de CPU: %d\n", num_cores);

    // Crear hilos
    pthread_t* threads = malloc(num_cores * sizeof(pthread_t));
    if (threads == NULL) {
        perror("Error al asignar memoria para los hilos");
        return EXIT_FAILURE;
    }

    // Crear los hilos
    for (long i = 0; i < num_cores; i++) {
        if (pthread_create(&threads[i], NULL, cpu_load, (void*)i) != >
            perror("Error al crear el hilo");
            free(threads);
            return EXIT_FAILURE;
        }
    }
// Esperar a que terminen los hilos
    for (int i = 0; i < num_cores; i++) {
        pthread_join(threads[i], NULL);
    }

    // Liberar memoria
    free(threads);
    printf("Todos los hilos han terminado.\n");

    return EXIT_SUCCESS;
}
































